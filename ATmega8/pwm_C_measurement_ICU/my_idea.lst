   1               		.file	"my_idea.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  69               	.global	__vector_5
  71               	__vector_5:
   1:my_idea.c     **** // ***********************************************************
   2:my_idea.c     **** // Project:
   3:my_idea.c     **** // Author:
   4:my_idea.c     **** // Module description:
   5:my_idea.c     **** // ***********************************************************
   6:my_idea.c     **** 
   7:my_idea.c     **** #include <avr\io.h>              // Most basic include files
   8:my_idea.c     **** #include <avr\interrupt.h>       // Add the necessary ones
   9:my_idea.c     **** #include <avr\signal.h>          // here
  10:my_idea.c     **** 
  11:my_idea.c     **** // Define here the global static variables
  12:my_idea.c     **** //
  13:my_idea.c     **** unsigned int on_t;
  14:my_idea.c     **** unsigned int off_t;
  15:my_idea.c     **** unsigned int temp;
  16:my_idea.c     **** 
  17:my_idea.c     **** char b,c;
  18:my_idea.c     **** 
  19:my_idea.c     **** unsigned int a;
  20:my_idea.c     **** unsigned int init, final;
  21:my_idea.c     **** 
  22:my_idea.c     **** // Interrupt handler example for INT0
  23:my_idea.c     **** //
  24:my_idea.c     **** 
  25:my_idea.c     **** ISR(TIMER1_CAPT_vect){
  72               	in r0,__SREG__
  73               		push r0
  74               		clr __zero_reg__
  75 0000 1F92      		push r18
  76 0002 0F92      		push r19
  77 0004 0FB6      		push r20
  78 0006 0F92      		push r21
  79 0008 1124      		push r24
  80 000a 2F93      		push r25
  81 000c 3F93      		push r30
  82 000e 4F93      		push r31
  83 0010 5F93      		push r29
  84 0012 8F93      		push r28
  85 0014 9F93      		in r28,__SP_L__
  86 0016 EF93      		in r29,__SP_H__
  87 0018 FF93      	/* prologue: Signal */
  88 001a DF93      	/* frame size = 0 */
  90 001e CDB7      	.LM1:
  91 0020 DEB7      		ldi r30,lo8(70)
  92               		ldi r31,hi8(70)
  93               		ld r24,Z
  26:my_idea.c     ****  temp = ICR1;
  94               	 r19
  95               		push r20
  96 0022 E6E4      		push r21
  97 0024 F0E0      		push r24
  98 0026 8081      		push r25
  99 0028 9181      		push r30
 100 002a 9093 0000 		push r31
 101 002e 8093 0000 		push r29
  27:my_idea.c     ****  b = ICR1L;
 102               	ctor_5
 104 0032 E6E4      	__vector_5:
 106 0036 8081      	.LM0:
 107 0038 8093 0000 	.LFBB1:
  28:my_idea.c     ****  c = ICR1H;
 108               	__zero_reg__
 109               		push r0
 110 003c E7E4      		in r0,__SREG__
 111 003e F0E0      		push r0
 112 0040 8081      		clr __zero_reg__
 113 0042 8093 0000 		push r18
  29:my_idea.c     ****  //rise detected
  30:my_idea.c     ****  if(a == 0){
 114               	r19
 115               		push r20
 116 0046 8091 0000 		push r21
 117 004a 9091 0000 		push r24
 118 004e 0097      		push r25
 119 0050 01F4      		push r30
  31:my_idea.c     ****    TCCR1B = (1<<CS10);
 120               	_vector_5
 121               	.global	__vector_5
 123 0054 F0E0      	__vector_5:
 125 0058 8083      	.LM0:
  32:my_idea.c     ****    init = temp;
 126               	:
 127               		push __zero_reg__
 128 005a 8091 0000 		push r0
 129 005e 9091 0000 		in r0,__SREG__
 130 0062 9093 0000 		push r0
 131 0066 8093 0000 		clr __zero_reg__
  33:my_idea.c     ****    a++;
 132               	r18
 133               		push r19
 134 006a 8091 0000 		push r20
 135 006e 9091 0000 		push r21
 136 0072 0196      		push r24
 137 0074 9093 0000 		push r25
 138 0078 8093 0000 		push r30
 139 007c 00C0      		push r31
 140               		push r29
  34:my_idea.c     ****  }
  35:my_idea.c     ****  else if(a == 1){
 141               	ctor_5
 143 007e 8091 0000 	__vector_5:
 145 0086 8130      	.LM0:
 146 0088 9105      	.LFBB1:
 147 008a 01F4      		push __zero_reg__
  36:my_idea.c     ****    final = temp;
 148               	0
 149               		in r0,__SREG__
 150 008c 8091 0000 		push r0
 151 0090 9091 0000 		clr __zero_reg__
 152 0094 9093 0000 		push r18
 153 0098 8093 0000 		push r19
  37:my_idea.c     ****    a++;
 156 009c 8091 0000 	.global	__vector_5
 158 00a4 0196      	__vector_5:
 160 00aa 8093 0000 	.LM0:
  38:my_idea.c     ****    TCCR1B = ((1<<ICES1)|(1<<CS10));
 161               	
 162               		push __zero_reg__
 163 00ae EEE4      		push r0
 164 00b0 F0E0      		in r0,__SREG__
 165 00b2 81E4      		push r0
 166 00b4 8083      		clr __zero_reg__
  39:my_idea.c     ****    on_t = final - init;
 167               	 r18
 168               		push r19
 169 00b6 2091 0000 		push r20
 170 00ba 3091 0000 		push r21
 171 00be 8091 0000 		push r24
 172 00c2 9091 0000 		push r25
 173 00c6 A901      		push r30
 174 00c8 481B      		push r31
 175 00ca 590B      		push r29
 176 00cc CA01      		push r28
 177 00ce 9093 0000 		in r28,__SP_L__
 178 00d2 8093 0000 		in r29,__SP_H__
  40:my_idea.c     ****    init = final;	
 179               	
 181 00d6 8091 0000 	.LM0:
 182 00da 9091 0000 	.LFBB1:
 183 00de 9093 0000 		push __zero_reg__
 184 00e2 8093 0000 		push r0
 185 00e6 00C0      		in r0,__SREG__
 186               		push r0
  41:my_idea.c     ****  }
  42:my_idea.c     ****  else if(a == 2){
 187               	zero_reg__
 188               		push r18
 189 00e8 8091 0000 		push r19
 190 00ec 9091 0000 		push r20
 191 00f0 8230      		push r21
 192 00f2 9105      		push r24
 193 00f4 01F4      		push r25
  43:my_idea.c     ****    final = temp;
 194               	)",36,0,0,__vector_5
 195               	.global	__vector_5
 197 00fa 9091 0000 	__vector_5:
 199 0102 8093 0000 	.LM0:
  44:my_idea.c     ****    a++;
 200               	:
 201               		push __zero_reg__
 202 0106 8091 0000 		push r0
 203 010a 9091 0000 		in r0,__SREG__
 204 010e 0196      		push r0
 205 0110 9093 0000 		clr __zero_reg__
 206 0114 8093 0000 		push r18
  45:my_idea.c     ****    off_t = final - init;
 207               	19
 208               		push r20
 209 0118 2091 0000 		push r21
 210 011c 3091 0000 		push r24
 211 0120 8091 0000 		push r25
 212 0124 9091 0000 		push r30
 213 0128 A901      		push r31
 214 012a 481B      		push r29
 215 012c 590B      		push r28
 216 012e CA01      		in r28,__SP_L__
 217 0130 9093 0000 		in r29,__SP_H__
 218 0134 8093 0000 	/* prologue: Signal */
  46:my_idea.c     ****    TCCR1B = 0x00;
 219               	FBB1
 220               	.LM0:
 221 0138 EEE4      	.LFBB1:
 222 013a F0E0      		push __zero_reg__
 223 013c 1082      		push r0
  47:my_idea.c     ****    cli();
 224               	0,__SREG__
 225               		push r0
 226               		clr __zero_reg__
 227               		push r18
 228 013e F894      		push r19
 229               		push r20
 230               		push r21
 231               		push r24
 232               		push r25
  48:my_idea.c     ****  }
  49:my_idea.c     **** }
 233               	)",36,0,0,__vector_5
 234               	.global	__vector_5
 236 0142 DF91      	__vector_5:
 238 0146 EF91      	.LM0:
 239 0148 9F91      	.LFBB1:
 240 014a 8F91      		push __zero_reg__
 241 014c 5F91      		push r0
 242 014e 4F91      		in r0,__SREG__
 243 0150 3F91      		push r0
 244 0152 2F91      		clr __zero_reg__
 245 0154 0F90      		push r18
 246 0156 0FBE      		push r19
 247 0158 0F90      		push r20
 248 015a 1F90      		push r21
 249 015c 1895      		push r24
 250               		push r25
 251               		push r30
 252               		push r31
 253               		push r29
 254               		push r28
 255               		in r28,__SP_L__
  50:my_idea.c     **** 
  51:my_idea.c     **** 
  52:my_idea.c     **** 
  53:my_idea.c     **** // It is recommended to use this coding style to
  54:my_idea.c     **** // follow better the mixed C-assembly code in the
  55:my_idea.c     **** // Program Memory window
  56:my_idea.c     **** //
  57:my_idea.c     **** 
  58:my_idea.c     **** // ***********************************************************
  59:my_idea.c     **** // Main program
  60:my_idea.c     **** //
  61:my_idea.c     **** int main(void) {
 256               	logue: Signal */
 257               	/* frame size = 0 */
 259 015e DF93      	.LM1:
 260 0160 CF93      		ldi r30,lo8(70)
 261 0162 CDB7      		ldi r31,hi8(70)
 262 0164 DEB7      		ld r24,Z
 263               		ldd r25,Z+1
 264               		sts (temp)+1,r25
  62:my_idea.c     **** 
  63:my_idea.c     ****    a=0;
 265               	4
 266               		push r25
 267 0166 1092 0000 		push r30
 268 016a 1092 0000 		push r31
  64:my_idea.c     **** 	DDRB = 0xFE;
 269               	global	__vector_5
 271 016e E7E3      	__vector_5:
 273 0172 8EEF      	.LM0:
 274 0174 8083      	.LFBB1:
  65:my_idea.c     **** 	TCCR1A = 0x00;
 275               	__zero_reg__
 276               		push r0
 277 0176 EFE4      		in r0,__SREG__
 278 0178 F0E0      		push r0
 279 017a 1082      		clr __zero_reg__
  66:my_idea.c     **** 	TIMSK = (1<<TICIE1);
 280               	 r18
 281               		push r19
 282 017c E9E5      		push r20
 283 017e F0E0      		push r21
 284 0180 80E2      		push r24
 285 0182 8083      		push r25
  67:my_idea.c     **** 	TCCR1B = ((1<<ICES1)|(1<<CS10));
 286               	)",36,0,0,__vector_5
 287               	.global	__vector_5
 289 0186 F0E0      	__vector_5:
 291 018a 8083      	.LM0:
  68:my_idea.c     **** 	TIFR = (1<<ICF1);
 292               	:
 293               		push __zero_reg__
 294 018c E8E5      		push r0
 295 018e F0E0      		in r0,__SREG__
 296 0190 80E2      		push r0
 297 0192 8083      		clr __zero_reg__
  69:my_idea.c     **** 	sei();
 298               	r18
 299               		push r19
 300               		push r20
 301               		push r21
 302 0194 7894      		push r24
 303               		push r25
 304               		push r30
 305               		push r31
  70:my_idea.c     **** 	
  71:my_idea.c     ****    while(a<3);
 306               	global	__vector_5
 308 0196 8091 0000 	__vector_5:
 310 019e 8330      	.LM0:
 311 01a0 9105      	.LFBB1:
 312 01a2 00F0      		push __zero_reg__
  72:my_idea.c     **** 
  73:my_idea.c     ****    a = 0;
 313               	0
 314               		in r0,__SREG__
 315 01a4 1092 0000 		push r0
 316 01a8 1092 0000 		clr __zero_reg__
 317               		push r18
 318 01ac 00C0      		push r19
 319               		push r20
 320               		push r21
 321               		push r24
 322               		push r25
 323               		push r30
 324               		push r31
 325               		push r29
 326               		push r28
 327               		in r28,__SP_L__
 328               		in r29,__SP_H__
 329               	/* prologue: Signal */
 330               	/* frame size = 0 */
 332               	.LM1:
 333               		ldi r30,lo8(70)
 334               		ldi r31,hi8(70)
 335               		ld r24,Z
 336               		ldd r25,Z+1
 337               		sts (temp)+1,r25
 338               		sts temp,r24
DEFINED SYMBOLS
                            *ABS*:00000000 my_idea.c
D:\DOCUME~1\student\LOCALS~1\Temp/ccXjcwft.s:2      *ABS*:0000003f __SREG__
D:\DOCUME~1\student\LOCALS~1\Temp/ccXjcwft.s:3      *ABS*:0000003e __SP_H__
D:\DOCUME~1\student\LOCALS~1\Temp/ccXjcwft.s:4      *ABS*:0000003d __SP_L__
D:\DOCUME~1\student\LOCALS~1\Temp/ccXjcwft.s:5      *ABS*:00000034 __CCP__
D:\DOCUME~1\student\LOCALS~1\Temp/ccXjcwft.s:6      *ABS*:00000000 __tmp_reg__
D:\DOCUME~1\student\LOCALS~1\Temp/ccXjcwft.s:7      *ABS*:00000001 __zero_reg__
D:\DOCUME~1\student\LOCALS~1\Temp/ccXjcwft.s:71     .text:00000000 __vector_5
                            *COM*:00000002 temp
                            *COM*:00000001 b
                            *COM*:00000001 c
                            *COM*:00000002 a
                            *COM*:00000002 init
                            *COM*:00000002 final
                            *COM*:00000002 on_t
                            *COM*:00000002 off_t
D:\DOCUME~1\student\LOCALS~1\Temp/ccXjcwft.s:255    .text:0000015e main

UNDEFINED SYMBOLS
__do_clear_bss
